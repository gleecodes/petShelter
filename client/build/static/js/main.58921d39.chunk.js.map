{"version":3,"sources":["components/DashBoard.js","components/NewPetForm.js","components/EditPet.js","components/PetDetail.js","App.js","serviceWorker.js","index.js"],"names":["DashBoard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","res","console","log","setState","pets","data","catch","err","state","react_default","a","createElement","react_router_dom","to","className","scope","map","pet","index","key","name","type","_id","Component","NewPetForm","changeName","e","objectSpread","target","value","changeType","changeDescription","description","changeSkillOne","skillOne","changeSkillTwo","skillTwo","changeSkillThree","skillThree","create","preventDefault","post","errors","history","push","onSubmit","onChange","message","EditPet","concat","match","params","update","put","delete","required","minLength","PetDetail","incrementMe","document","getElementById","disabled","newCount","count","likes","onClick","id","bind","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58921d39.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass DashBoard extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            pets: []\n        }\n    }\n    \n    componentDidMount = () => {\n        axios.get(\"/pets\")\n            .then(res => {\n                console.log(res);\n                this.setState({pets: res.data.pets});\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n    \n\n    render() {\n        return (\n            <fieldset>\n                <Link to=\"/pet/new\">Add a pet to the Shelter</Link>\n                \n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Type</th>\n                                <th scope=\"col\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.state.pets.map( (pet, index)  => \n                                <tr key={index}>\n                                    <td>{pet.name}</td>\n                                    <td>{pet.type}</td>\n                                    <td>\n                                        <Link \n                                            to={\"/pet/\" + pet._id + \"/edit\"}>\n                                            <button>Edit</button>\n                                        </Link>\n                                        <Link \n                                            to={\"/pet/\" + pet._id + \"/details\"}>\n                                            <button>Details</button>\n                                        </Link>\n                                    </td>\n                                </tr>    \n                            )\n                        }\n                        </tbody>\n                    </table>\n            </fieldset>\n\n\n        )\n    }\n\n\n\n}\nexport default DashBoard;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass NewPetForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {\n                name: '',\n                type: '',\n                description: '',\n                skillOne: '',\n                skillTwo: '',\n                skillThree: '',\n            },\n            errors: {}\n        }\n    }\n\n\n    changeName = (e) => {\n        this.setState({pet: {...this.state.pet, name: e.target.value}});\n    }\n    changeType = (e) => {\n        this.setState({pet: {...this.state.pet, type: e.target.value}});\n    }\n\n    changeDescription = (e) => {\n        this.setState({pet: {...this.state.pet, description: e.target.value}});\n    }\n    changeSkillOne = (e) => {\n        this.setState({pet: {...this.state.pet, skillOne: e.target.value}});\n    }\n    changeSkillTwo = (e) => {\n        this.setState({pet: {...this.state.pet, skillTwo: e.target.value}});\n    }\n    changeSkillThree = (e) => {\n        this.setState({pet: {...this.state.pet, skillThree: e.target.value}});\n    }\n\n    create = (e) => {\n        e.preventDefault();\n        axios.post(\"/pets\", this.state.pet)\n        .then(res => {\n            if(res.data.errors){\n                this.setState({errors: res.data.errors.errors});\n                console.log(this.state);\n            }else {\n                this.props.history.push(\"/\");\n                console.log(this.state.pet)\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"jumbotron\">\n                <legend>Add Pet</legend>\n                <form onSubmit={this.create}>\n                <p>\n                    Name:&nbsp;\n                    <input type=\"text\" onChange={this.changeName} />\n                    {\n                        (this.state.errors.name) ? \n                        <span className=\"error\">&nbsp;{this.state.errors.name.message}</span> :\n                        <span></span>\n                    }\n                </p>\n                <p>\n                    Type:&nbsp;\n                    <input type=\"text\" onChange={this.changeType} />\n                    {\n                        (this.state.errors.type) ? \n                        <span className=\"error\">&nbsp;{this.state.errors.type.message}</span> :\n                        <span></span>\n                    }\n                </p>\n                <p>\n                    Description:&nbsp;\n                    <input type=\"text\" onChange={this.changeDescription} />\n                    {\n                        (this.state.errors.description) ? \n                        <span className=\"error\">&nbsp;{this.state.errors.description.message}</span> :\n                        <span></span>\n                    }\n                </p>\n               \n                <h3>Skills:</h3>\n                    <p>\n                        <input type=\"text\" onChange={this.changeSkillOne} />\n                    {\n                        (this.state.errors.skillOne) ? \n                        <span className=\"error\">&nbsp;{this.state.errors.skillOne.message}</span> :\n                        <span></span>\n                    }\n                    </p>\n                    <p>\n                        <input type=\"text\" onChange={this.changeSkillTwo} />\n                    {\n                        (this.state.errors.skillTwo) ? \n                        <span className=\"error\">&nbsp;{this.state.errors.skillTwo.message}</span> :\n                        <span></span>\n                    }\n                    </p>\n                    <p>\n                        <input type=\"text\" onChange={this.changeSkillThree} />\n                    {\n                        (this.state.errors.skillThree) ? \n                        <span className=\"error\">&nbsp;{this.state.errors.skillThree.message}</span> :\n                        <span></span>\n                    }\n                    </p>\n                        <button type=\"submit\">Add Pet</button>\n                    \n                    <Link to={\"/\"}>\n                        <button>Cancel</button>\n                    </Link>\n                </form>\n            </div>\n        );\n    }   \n}\n\nexport default NewPetForm; \n\n    ","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass EditPet extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {\n                name: \"\",\n                type: \"\",\n                description: \"\",\n                skillOne: \"\",\n                skillTwo: \"\",\n                skillThree: \"\"\n            },\n            errors:{}\n        }\n    }\n\n\ncomponentDidMount = () => {\n    axios.get(`/pets/${this.props.match.params._id}`)\n    .then(res => {\n        this.setState({pet: res.data.pet});\n        console.log(res.data.pet);\n    }).catch (err => {\n        console.log(err);\n    })\n}\n\nchangeName = (e) => {\n    this.setState({pet: {...this.state.pet, name: e.target.value}});\n}\n\nchangeType = (e) => {\n    this.setState({pet: {...this.state.pet, type: e.target.value}});\n}\n\nchangeDescription = (e) => {\n    this.setState({pet: {...this.state.pet, description: e.target.value}});\n}\nchangeSkillOne = (e) => {\n    this.setState({pet: {...this.state.pet, skillOne: e.target.value}});\n}\nchangeSkillTwo = (e) => {\n    this.setState({pet: {...this.state.pet, skillTwo: e.target.value}});\n}\nchangeSkillThree = (e) => {\n    this.setState({pet: {...this.state.pet, skillThree: e.target.value}});\n}\n\n\n    update = (e) => {\n        e.preventDefault();\n        axios.put(`/pets/${this.props.match.params._id}`, this.state.pet)\n            .then(res => {\n                if(res.data.errors){\n                    this.setState({errors: res.data.errors.errors});\n                } else {\n                    this.props.history.push('/');\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\ndelete = (e) => {\n    axios.delete(`/pets/${this.props.match.params._id}`)\n        .then(res => {\n            this.props.history.push('/');\n        }).catch(err => {\n            console.log(err);\n        });\n}\n\nrender() {\n    return(\n        <div className=\"jumbotron\">\n        <legend>Add Pet</legend>\n        <form onSubmit={this.update}>\n        <p>\n            Name:&nbsp;\n            <input \n                type=\"text\" \n                onChange={this.changeName} \n                value={this.state.pet.name} \n                required\n                minLength=\"3\"\n            />\n            {\n                (this.state.errors.name) ? \n                <span className=\"error\">&nbsp;{this.state.errors.name.message}</span> :\n                <span></span>\n            }\n        </p>\n        <p>\n            Type:&nbsp;\n            <input type=\"text\" \n            onChange={this.changeType} \n            value={this.state.pet.type}\n            required\n            minLength=\"3\"\n             />\n            {\n                (this.state.errors.type) ? \n                <span className=\"error\">&nbsp;{this.state.errors.type.message}</span> :\n                <span></span>\n            }\n        </p>\n        <p>\n            Description:&nbsp;\n            <input type=\"text\" \n            onChange={this.changeDescription} \n            value={this.state.pet.description}\n            required\n            minLength=\"3\"\n             />\n            {\n                (this.state.errors.description) ? \n                <span className=\"error\">&nbsp;{this.state.errors.description.message}</span> :\n                <span></span>\n            }\n        </p>\n       \n        <h3>Skills:</h3>\n            <p>\n                <input type=\"text\" onChange={this.changeSkillOne} value={this.state.pet.skillOne} />\n            {\n                (this.state.errors.skillOne) ? \n                <span className=\"error\">&nbsp;{this.state.errors.skillOne.message}</span> :\n                <span></span>\n            }\n            </p>\n            <p>\n                <input type=\"text\" onChange={this.changeSkillTwo} value={this.state.pet.skillTwo} />\n            {\n                (this.state.errors.skillTwo) ? \n                <span className=\"error\">&nbsp;{this.state.errors.skillTwo.message}</span> :\n                <span></span>\n            }\n            </p>\n            <p>\n                <input type=\"text\" onChange={this.changeSkillThree}  value={this.state.pet.skillThree} />\n            {\n                (this.state.errors.skillThree) ? \n                <span className=\"error\">&nbsp;{this.state.errors.skillThree.message}</span> :\n                <span></span>\n            }\n            </p>\n        \n            <button type=\"submit\">Update</button>\n                    <Link to={\"/\"}>\n                        <button>Cancel</button>\n                    </Link>\n        </form>\n    </div>\n);\n                \n                    \n                   \n\n}}\n\n\nexport default EditPet;\n\n//<button onClick={this.delete}>Delete Activity</button> ","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\n\nclass PetDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {\n                name: '',\n                type: '',\n                description: '',\n                skillOne: '',\n                skillTwo: '',\n                skillThree: '',\n                likes: ''\n            },\n            count:0,\n            errors: {},\n            \n            \n        }\n    }\n    \n    componentDidMount = () => {\n    \n        axios.get(`/pets/${this.props.match.params._id}`)\n        .then(res => {\n            this.setState({pet: res.data.pet});\n        }) .catch (err => {\n            console.log(err);\n        });\n    };\n    \n    incrementMe = (e) => {\n        document.getElementById(\"like\").disabled=true;\n        let newCount = this.state.count +1\n            e.likes ++\n        this.setState({\n            count: newCount\n        })\n        console.log(e)\n        console.log(\"!!!!\")\n        axios.put(`/pets/${this.props.match.params._id}`,e)\n        .then(res => {\n            if(res.data.errors){\n                this.setState({errors: res.data.errors.errors});\n                \n            }else {\n                this.props.history.push(\"/\");\n                console.log(this.state.pet)\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n        \n    }\n\n\n\n\n\n    delete = (e) => {\n        axios.delete(`/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.props.history.push('/');\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    render(){\n        return(\n            <div>\n           <Link to=\"/\">HOME</Link>\n            <h1>Details about: {this.state.pet.name}</h1>\n            <h3>Pet Type: {this.state.pet.type}</h3>\n            <h3>Description: {this.state.pet.description}</h3>\n            <h3>Skills:</h3> <h4>{this.state.pet.skillOne}</h4>\n            <h4>{this.state.pet.skillOne}</h4>\n            <h4>{this.state.pet.skillTwo}</h4>\n            <h4>{this.state.pet.skillThree}</h4>\n            <h3>Likes:</h3>\n            <h4>{this.state.pet.likes}</h4>\n            \n            <button onClick={this.delete}>Adopt</button>\n            <button id=\"like\"  onClick={this.incrementMe.bind(this, this.state.pet)}>Likes: </button> \n            </div>\n        )};\n    }\n\nexport default PetDetail;","import React, { Component } from 'react';\nimport './App.css';\nimport \"react-router\";\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport DashBoard from './components/DashBoard';\nimport NewPetForm from './components/NewPetForm';\nimport EditPet from './components/EditPet';\nimport PetDetail from './components/PetDetail';\n\nclass App extends Component {\n  render() {\n  return (\n    <div className=\"jumbotron\" >\n      <h1> Pet Shelter </h1>\n      \n      \n\n      <BrowserRouter>\n        <Route exact path= \"/\" component={DashBoard} />\n        <Route path=\"/pet/new\" component={NewPetForm} />\n        <Route path=\"/pet/:_id/edit\" component={EditPet} />\n        <Route path=\"/pet/:_id/details\" component={PetDetail} />\n      </BrowserRouter>\n\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}